@inherits LayoutComponentBase
@using WorklogDomain
@inject HttpClient Http
@inject IJSRuntime JsRuntime



    <div class="page">
        <div class="sidebar">
            <NavMenu MainLayout="this"/>
        </div>

        <div class="main">
            <div class="content px-4">
                @if (AuthData == null)
                {
                    <p>Checking Auth ...</p>

                }
                else if (!AuthData.IsAuthorized)
                {
                    <p>Auth Code <input type="text" @onchange="@((ChangeEventArgs __e) => Authorize(__e.Value.ToString()))" /> <button>Log in</button></p>
                }
                else
                {
                    @Body
                }
            </div>
        </div>
    </div>

@code {
    public AuthData AuthData { get; set; }
    protected string Namespace = "";

    protected override async Task OnInitializedAsync()
    {
        AuthData = await Http.GetFromJsonAsync<AuthData>("api/auth");
    }
    protected async Task Authorize(string auth)
    {
        await Http.PostAsJsonAsync("api/auth", auth);
        AuthData = await Http.GetFromJsonAsync<AuthData>("api/auth");
    }
    public async Task Logout()
    {
        bool confirmed = await JsRuntime.InvokeAsync<bool>("confirm", "Log out?");
        if (!confirmed) return;
        await Http.GetAsync("api/auth/logout");
        AuthData = await Http.GetFromJsonAsync<AuthData>("api/auth");
    }
}
